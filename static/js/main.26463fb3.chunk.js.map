{"version":3,"sources":["components/editor.js","components/preview.js","index.js"],"names":["Editor","props","react_default","a","createElement","className","id","value","markdown","onChange","type","marked","breaks","Preview","dangerouslySetInnerHTML","__html","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","placeholder","setState","_this2","editor","event","handleChange","target","preview","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"uKAgBeA,EAdA,SAACC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UACAH,EAAAC,EAAAC,cAAA,YACEE,GAAG,SACHC,MAAON,EAAMO,SACbC,SAAUR,EAAMQ,SAChBC,KAAK,kBCPbC,aAAkB,CAChBC,QAAQ,IAGV,IASeC,EATC,SAACZ,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UAAUQ,wBAAyB,CAACC,OAAQJ,EAAOV,EAAMO,eCLjEQ,cACJ,SAAAA,EAAYf,GAAO,IAAAgB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMnB,KAEDuB,MAAQ,CACXhB,SAAUiB,GAJKR,4EAQNT,GACXY,KAAKM,SAAS,CAAClB,8CAGR,IAAAmB,EAAAP,KACP,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,iCAEJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwB,EAAD,CACEpB,SAAUY,KAAKI,MAAMhB,SACrBC,SAAU,SAAAoB,GAAK,OAAIF,EAAKG,aAAaD,EAAME,OAAOxB,UACpDL,EAAAC,EAAAC,cAAC4B,EAAD,CACExB,SAAUY,KAAKI,MAAMhB,oBAzBbyB,aAgCZR,EAAW,w1CA4EjBS,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.26463fb3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Editor = (props) => {\r\n  return(\r\n    <div className=\"col mark-editor\">\r\n      <div className=\"label\">Editor</div>\r\n      <textarea\r\n        id=\"editor\"\r\n        value={props.markdown}\r\n        onChange={props.onChange}\r\n        type=\"text\">  \r\n      </textarea>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nimport * as marked from 'marked';\r\n\r\nmarked.setOptions({\r\n  breaks: true,\r\n});\r\n\r\nconst Preview = (props) => {\r\n  return (\r\n    <div className=\"col mark-preview\">\r\n      <div className=\"label\">Preview</div>\r\n      <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(props.markdown)}} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preview;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Editor from './components/editor';\nimport Preview from './components/preview';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markdown: placeholder\n    }\n  }\n\n  handleChange(markdown) {\n    this.setState({markdown});\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"header\">\n          <h1>Markdown Previewer</h1>\n      </div>\n      <hr/>\n      <div className=\"row\">\n        <Editor \n          markdown={this.state.markdown}\n          onChange={event => this.handleChange(event.target.value)}/>\n        <Preview\n          markdown={this.state.markdown}/>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst placeholder = \n`# Hello, This is Markdown Live Preview\n----\n## What is Markdown?\nsee [Wikipedia](http://en.wikipedia.org/wiki/Markdown)\n\n> Markdown is a lightweight markup language, originally created by John Gruber and Aaron Swartz allowing people \"to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML)\".\n\n----\n# Headers\n# This is an \\`<h1>\\` tag\n## This is an \\`<h2>\\` tag\n###### This is an \\`<h6>\\` tag\n----\n# Emphasis\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_\n\n----\n# Lists\n\n### Unordered Lists\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n### Ordered Lists\n1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b\n\n----\n# Images\n![GitHub Logo](/images/logo.png)\nFormat: ![Alt Text](url)\n\n----\n# Links\nhttp://github.com - automatic!\n[GitHub](http://github.com)\n\n----\n# Blockquotes\n> This is a block quote\n\n----\n# Inline Html\nI think you should use an\n\\`<addr>\\` element here instead.\n\n----\n# Code\n\\`\\`\\`\nfunction fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:'#foo'})\n  }\n}\n\\`\\`\\`\n\n----\n# Table\nFirst Header | Second Header\n------------ | -------------\nContent from cell 1 | Content from cell 2\nContent in the first column | Content in the second column\n`;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}